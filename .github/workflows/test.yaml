name: Test

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize]
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
          cache-dependency-path: pyproject.toml
      - uses: actions/cache@v4
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ runner.os }}-python-${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}-test-v03
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pip install poetry && pip install -e .
      - name: Lint
        uses: github/super-linter@v5
        env:
          VALIDATE_PYTHON_FLAKE8: true
      - name: Test
        run: poetry install && make test
      - name: Code coverage
        uses: codecov/codecov-action@v4.6.0
        with:
           verbose: true
           files: ./coverage.xml
